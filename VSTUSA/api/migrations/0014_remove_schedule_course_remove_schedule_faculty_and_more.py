# Generated by Django 5.2.dev20241016095222 on 2025-02-26 09:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0013_rename_place_override_event_places_override_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='schedule',
            name='course',
        ),
        migrations.RemoveField(
            model_name='schedule',
            name='faculty',
        ),
        migrations.RemoveField(
            model_name='schedule',
            name='scope',
        ),
        migrations.RemoveField(
            model_name='schedule',
            name='semester',
        ),
        migrations.RemoveField(
            model_name='schedule',
            name='years',
        ),
        migrations.AlterField(
            model_name='abstractevent',
            name='holds_on_dates',
            field=models.DateField(blank=True, null=True, verbose_name='Проводится только в заданные дни'),
        ),
        migrations.CreateModel(
            name='ScheduleMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idnumber', models.CharField(blank=True, max_length=260, null=True, unique=True, verbose_name='Уникальный строковый идентификатор')),
                ('datecreated', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('datemodified', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменения записи')),
                ('dateaccessed', models.DateTimeField(blank=True, null=True, verbose_name='Дата доступа к записи')),
                ('note', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Комментарий для этой записи')),
                ('years', models.CharField(max_length=16, verbose_name='Учебный год')),
                ('course', models.IntegerField(verbose_name='Курс')),
                ('semester', models.IntegerField(verbose_name='Семестр')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор записи')),
            ],
            options={
                'verbose_name': 'Метаданные расписания',
                'verbose_name_plural': 'Метаданные расписания',
            },
        ),
        migrations.AddField(
            model_name='schedule',
            name='metadata',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.schedulemetadata', verbose_name='Курс, семестр, год'),
        ),
        migrations.CreateModel(
            name='ScheduleTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idnumber', models.CharField(blank=True, max_length=260, null=True, unique=True, verbose_name='Уникальный строковый идентификатор')),
                ('datecreated', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('datemodified', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменения записи')),
                ('dateaccessed', models.DateTimeField(blank=True, null=True, verbose_name='Дата доступа к записи')),
                ('note', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Комментарий для этой записи')),
                ('repetition_period', models.IntegerField(verbose_name='Период повторения')),
                ('repeatable', models.BooleanField(verbose_name='Повторяется ли')),
                ('aligned_by_week_day', models.IntegerField(verbose_name='Выравнивание относительно дня недели (null=0, пн=1, ...)')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор записи')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.department', verbose_name='Подразделение')),
            ],
            options={
                'verbose_name': 'Абстрактное расписание',
                'verbose_name_plural': 'Абстрактные расписания',
            },
        ),
        migrations.AlterField(
            model_name='schedule',
            name='abstract_schedule',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.scheduletemplate', verbose_name='Абстрактное расписание'),
        ),
        migrations.CreateModel(
            name='ScheduleTemplateMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idnumber', models.CharField(blank=True, max_length=260, null=True, unique=True, verbose_name='Уникальный строковый идентификатор')),
                ('datecreated', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('datemodified', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменения записи')),
                ('dateaccessed', models.DateTimeField(blank=True, null=True, verbose_name='Дата доступа к записи')),
                ('note', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Комментарий для этой записи')),
                ('faculty', models.CharField(max_length=32, verbose_name='Факультет')),
                ('scope', models.CharField(choices=[('bachelor', 'Бакалавриат'), ('master', 'Магистратура'), ('postgraduate', 'Аспирантура'), ('consultation', 'Консультация')], max_length=32, verbose_name='Обучение')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор записи')),
            ],
            options={
                'verbose_name': 'Метаданные шаблона расписания',
                'verbose_name_plural': 'Метаданные шаблона расписания',
            },
        ),
        migrations.AddField(
            model_name='scheduletemplate',
            name='metadata',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.scheduletemplatemetadata', verbose_name='Факультет, обучение'),
        ),
        migrations.DeleteModel(
            name='AbstractSchedule',
        ),
    ]
